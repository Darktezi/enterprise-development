// <auto-generated />
using System;
using Airline.Infrastructure.EfCore;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Airline.Infrastructure.EfCore.Migrations
{
    [DbContext(typeof(AirlineDbContext))]
    partial class AirlineDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.10")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Airline.Domain.Entities.AirlineFamily", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Manufacturer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Families");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Manufacturer = "Boeing",
                            Name = "Boeing 737"
                        },
                        new
                        {
                            Id = 2,
                            Manufacturer = "Airbus",
                            Name = "Airbus A320"
                        },
                        new
                        {
                            Id = 3,
                            Manufacturer = "Boeing",
                            Name = "Boeing 777"
                        },
                        new
                        {
                            Id = 4,
                            Manufacturer = "Airbus",
                            Name = "Airbus A330"
                        },
                        new
                        {
                            Id = 5,
                            Manufacturer = "Embraer",
                            Name = "Embraer E190"
                        },
                        new
                        {
                            Id = 6,
                            Manufacturer = "Bombardier",
                            Name = "Bombardier CS300"
                        },
                        new
                        {
                            Id = 7,
                            Manufacturer = "Boeing",
                            Name = "Boeing 787"
                        },
                        new
                        {
                            Id = 8,
                            Manufacturer = "Airbus",
                            Name = "Airbus A350"
                        },
                        new
                        {
                            Id = 9,
                            Manufacturer = "Sukhoi",
                            Name = "Sukhoi Superjet 100"
                        },
                        new
                        {
                            Id = 10,
                            Manufacturer = "Comac",
                            Name = "Comac C919"
                        });
                });

            modelBuilder.Entity("Airline.Domain.Entities.AirlineModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("CargoCapacity")
                        .HasColumnType("float");

                    b.Property<int>("FamilyId")
                        .HasColumnType("int");

                    b.Property<double>("FlightRange")
                        .HasColumnType("float");

                    b.Property<string>("ModelName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PassengerCapacity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FamilyId");

                    b.ToTable("Models");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CargoCapacity = 8000.0,
                            FamilyId = 1,
                            FlightRange = 5000.0,
                            ModelName = "737-800",
                            PassengerCapacity = 160
                        },
                        new
                        {
                            Id = 2,
                            CargoCapacity = 7500.0,
                            FamilyId = 2,
                            FlightRange = 6100.0,
                            ModelName = "A320-200",
                            PassengerCapacity = 150
                        },
                        new
                        {
                            Id = 3,
                            CargoCapacity = 18000.0,
                            FamilyId = 3,
                            FlightRange = 13600.0,
                            ModelName = "777-300ER",
                            PassengerCapacity = 300
                        },
                        new
                        {
                            Id = 4,
                            CargoCapacity = 15000.0,
                            FamilyId = 4,
                            FlightRange = 11700.0,
                            ModelName = "A330-300",
                            PassengerCapacity = 280
                        },
                        new
                        {
                            Id = 5,
                            CargoCapacity = 4000.0,
                            FamilyId = 5,
                            FlightRange = 4000.0,
                            ModelName = "E190",
                            PassengerCapacity = 100
                        },
                        new
                        {
                            Id = 6,
                            CargoCapacity = 5000.0,
                            FamilyId = 6,
                            FlightRange = 3600.0,
                            ModelName = "CS300",
                            PassengerCapacity = 130
                        },
                        new
                        {
                            Id = 7,
                            CargoCapacity = 16000.0,
                            FamilyId = 7,
                            FlightRange = 14100.0,
                            ModelName = "787-9",
                            PassengerCapacity = 280
                        },
                        new
                        {
                            Id = 8,
                            CargoCapacity = 17000.0,
                            FamilyId = 8,
                            FlightRange = 15000.0,
                            ModelName = "A350-900",
                            PassengerCapacity = 300
                        },
                        new
                        {
                            Id = 9,
                            CargoCapacity = 3500.0,
                            FamilyId = 9,
                            FlightRange = 3000.0,
                            ModelName = "SSJ100",
                            PassengerCapacity = 98
                        },
                        new
                        {
                            Id = 10,
                            CargoCapacity = 7000.0,
                            FamilyId = 10,
                            FlightRange = 4000.0,
                            ModelName = "C919",
                            PassengerCapacity = 156
                        });
                });

            modelBuilder.Entity("Airline.Domain.Entities.Flight", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AircraftModelId")
                        .HasColumnType("int");

                    b.Property<string>("ArrivalAirport")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ArrivalDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DepartureAirport")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DepartureDate")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan?>("TravelTime")
                        .HasColumnType("time");

                    b.HasKey("Id");

                    b.HasIndex("AircraftModelId");

                    b.ToTable("Flights");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AircraftModelId = 1,
                            ArrivalAirport = "JFK",
                            ArrivalDate = new DateTime(2025, 9, 1, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            Code = "SU1001",
                            DepartureAirport = "SVO",
                            DepartureDate = new DateTime(2025, 9, 1, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            TravelTime = new TimeSpan(0, 4, 0, 0, 0)
                        },
                        new
                        {
                            Id = 2,
                            AircraftModelId = 2,
                            ArrivalAirport = "LHR",
                            ArrivalDate = new DateTime(2025, 9, 2, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            Code = "SU1002",
                            DepartureAirport = "LED",
                            DepartureDate = new DateTime(2025, 9, 2, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            TravelTime = new TimeSpan(0, 3, 0, 0, 0)
                        },
                        new
                        {
                            Id = 3,
                            AircraftModelId = 3,
                            ArrivalAirport = "CDG",
                            ArrivalDate = new DateTime(2025, 9, 3, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            Code = "SU1003",
                            DepartureAirport = "SVO",
                            DepartureDate = new DateTime(2025, 9, 3, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            TravelTime = new TimeSpan(0, 4, 0, 0, 0)
                        },
                        new
                        {
                            Id = 4,
                            AircraftModelId = 4,
                            ArrivalAirport = "FRA",
                            ArrivalDate = new DateTime(2025, 9, 4, 18, 0, 0, 0, DateTimeKind.Unspecified),
                            Code = "SU1004",
                            DepartureAirport = "LED",
                            DepartureDate = new DateTime(2025, 9, 4, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            TravelTime = new TimeSpan(0, 3, 0, 0, 0)
                        },
                        new
                        {
                            Id = 5,
                            AircraftModelId = 5,
                            ArrivalAirport = "AMS",
                            ArrivalDate = new DateTime(2025, 9, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Code = "SU1005",
                            DepartureAirport = "SVO",
                            DepartureDate = new DateTime(2025, 9, 5, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            TravelTime = new TimeSpan(0, 4, 0, 0, 0)
                        },
                        new
                        {
                            Id = 6,
                            AircraftModelId = 6,
                            ArrivalAirport = "JFK",
                            ArrivalDate = new DateTime(2025, 9, 6, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            Code = "SU1006",
                            DepartureAirport = "LED",
                            DepartureDate = new DateTime(2025, 9, 6, 11, 0, 0, 0, DateTimeKind.Unspecified),
                            TravelTime = new TimeSpan(0, 2, 0, 0, 0)
                        },
                        new
                        {
                            Id = 7,
                            AircraftModelId = 7,
                            ArrivalAirport = "LHR",
                            ArrivalDate = new DateTime(2025, 9, 7, 17, 0, 0, 0, DateTimeKind.Unspecified),
                            Code = "SU1007",
                            DepartureAirport = "SVO",
                            DepartureDate = new DateTime(2025, 9, 7, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            TravelTime = new TimeSpan(0, 4, 0, 0, 0)
                        },
                        new
                        {
                            Id = 8,
                            AircraftModelId = 8,
                            ArrivalAirport = "CDG",
                            ArrivalDate = new DateTime(2025, 9, 8, 11, 0, 0, 0, DateTimeKind.Unspecified),
                            Code = "SU1008",
                            DepartureAirport = "LED",
                            DepartureDate = new DateTime(2025, 9, 8, 7, 0, 0, 0, DateTimeKind.Unspecified),
                            TravelTime = new TimeSpan(0, 4, 0, 0, 0)
                        },
                        new
                        {
                            Id = 9,
                            AircraftModelId = 9,
                            ArrivalAirport = "FRA",
                            ArrivalDate = new DateTime(2025, 9, 9, 18, 0, 0, 0, DateTimeKind.Unspecified),
                            Code = "SU1009",
                            DepartureAirport = "SVO",
                            DepartureDate = new DateTime(2025, 9, 9, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            TravelTime = new TimeSpan(0, 4, 0, 0, 0)
                        },
                        new
                        {
                            Id = 10,
                            AircraftModelId = 10,
                            ArrivalAirport = "AMS",
                            ArrivalDate = new DateTime(2025, 9, 10, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            Code = "SU1010",
                            DepartureAirport = "LED",
                            DepartureDate = new DateTime(2025, 9, 10, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            TravelTime = new TimeSpan(0, 4, 0, 0, 0)
                        });
                });

            modelBuilder.Entity("Airline.Domain.Entities.Passenger", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateOnly?>("BirthDate")
                        .HasColumnType("date");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MiddleName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PassportNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Passengers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BirthDate = new DateOnly(1985, 5, 12),
                            FirstName = "Иван",
                            LastName = "Иванов",
                            MiddleName = "Иванович",
                            PassportNumber = "P000001"
                        },
                        new
                        {
                            Id = 2,
                            BirthDate = new DateOnly(1990, 7, 22),
                            FirstName = "Анна",
                            LastName = "Петрова",
                            MiddleName = "Сергеевна",
                            PassportNumber = "P000002"
                        },
                        new
                        {
                            Id = 3,
                            BirthDate = new DateOnly(1982, 11, 2),
                            FirstName = "Павел",
                            LastName = "Сидоров",
                            PassportNumber = "P000003"
                        },
                        new
                        {
                            Id = 4,
                            BirthDate = new DateOnly(1995, 3, 15),
                            FirstName = "Мария",
                            LastName = "Кузнецова",
                            PassportNumber = "P000004"
                        },
                        new
                        {
                            Id = 5,
                            BirthDate = new DateOnly(1988, 12, 5),
                            FirstName = "Алексей",
                            LastName = "Смирнов",
                            MiddleName = "Игоревич",
                            PassportNumber = "P000005"
                        },
                        new
                        {
                            Id = 6,
                            BirthDate = new DateOnly(1992, 1, 20),
                            FirstName = "Елена",
                            LastName = "Васильева",
                            PassportNumber = "P000006"
                        },
                        new
                        {
                            Id = 7,
                            BirthDate = new DateOnly(1983, 6, 30),
                            FirstName = "Дмитрий",
                            LastName = "Морозов",
                            MiddleName = "Александрович",
                            PassportNumber = "P000007"
                        },
                        new
                        {
                            Id = 8,
                            BirthDate = new DateOnly(1991, 9, 9),
                            FirstName = "Ольга",
                            LastName = "Федорова",
                            PassportNumber = "P000008"
                        },
                        new
                        {
                            Id = 9,
                            BirthDate = new DateOnly(1987, 4, 18),
                            FirstName = "Никита",
                            LastName = "Попов",
                            MiddleName = "Сергеевич",
                            PassportNumber = "P000009"
                        },
                        new
                        {
                            Id = 10,
                            BirthDate = new DateOnly(1994, 8, 25),
                            FirstName = "Анна",
                            LastName = "Михайлова",
                            PassportNumber = "P000010"
                        });
                });

            modelBuilder.Entity("Airline.Domain.Entities.Ticket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double?>("BaggageWeight")
                        .HasColumnType("float");

                    b.Property<int>("FlightId")
                        .HasColumnType("int");

                    b.Property<bool>("HasHandLuggage")
                        .HasColumnType("bit");

                    b.Property<int>("PassengerId")
                        .HasColumnType("int");

                    b.Property<string>("SeatNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FlightId");

                    b.HasIndex("PassengerId");

                    b.ToTable("Tickets");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BaggageWeight = 0.0,
                            FlightId = 1,
                            HasHandLuggage = true,
                            PassengerId = 1,
                            SeatNumber = "12A"
                        },
                        new
                        {
                            Id = 2,
                            BaggageWeight = 1.0,
                            FlightId = 1,
                            HasHandLuggage = false,
                            PassengerId = 2,
                            SeatNumber = "13A"
                        },
                        new
                        {
                            Id = 3,
                            BaggageWeight = 0.0,
                            FlightId = 1,
                            HasHandLuggage = false,
                            PassengerId = 3,
                            SeatNumber = "14A"
                        },
                        new
                        {
                            Id = 4,
                            BaggageWeight = 1.0,
                            FlightId = 2,
                            HasHandLuggage = false,
                            PassengerId = 4,
                            SeatNumber = "15A"
                        },
                        new
                        {
                            Id = 5,
                            BaggageWeight = 0.0,
                            FlightId = 2,
                            HasHandLuggage = true,
                            PassengerId = 5,
                            SeatNumber = "16A"
                        },
                        new
                        {
                            Id = 6,
                            BaggageWeight = 1.0,
                            FlightId = 6,
                            HasHandLuggage = false,
                            PassengerId = 6,
                            SeatNumber = "17A"
                        },
                        new
                        {
                            Id = 7,
                            BaggageWeight = 0.0,
                            FlightId = 7,
                            HasHandLuggage = true,
                            PassengerId = 7,
                            SeatNumber = "18A"
                        },
                        new
                        {
                            Id = 8,
                            BaggageWeight = 1.0,
                            FlightId = 8,
                            HasHandLuggage = false,
                            PassengerId = 8,
                            SeatNumber = "19A"
                        },
                        new
                        {
                            Id = 9,
                            BaggageWeight = 0.0,
                            FlightId = 9,
                            HasHandLuggage = true,
                            PassengerId = 9,
                            SeatNumber = "20A"
                        },
                        new
                        {
                            Id = 10,
                            BaggageWeight = 1.0,
                            FlightId = 10,
                            HasHandLuggage = false,
                            PassengerId = 10,
                            SeatNumber = "21A"
                        });
                });

            modelBuilder.Entity("Airline.Domain.Entities.AirlineModel", b =>
                {
                    b.HasOne("Airline.Domain.Entities.AirlineFamily", "Family")
                        .WithMany("Models")
                        .HasForeignKey("FamilyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Family");
                });

            modelBuilder.Entity("Airline.Domain.Entities.Flight", b =>
                {
                    b.HasOne("Airline.Domain.Entities.AirlineModel", "AircraftModel")
                        .WithMany("Flights")
                        .HasForeignKey("AircraftModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AircraftModel");
                });

            modelBuilder.Entity("Airline.Domain.Entities.Ticket", b =>
                {
                    b.HasOne("Airline.Domain.Entities.Flight", "Flight")
                        .WithMany("Tickets")
                        .HasForeignKey("FlightId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Airline.Domain.Entities.Passenger", "Passenger")
                        .WithMany("Tickets")
                        .HasForeignKey("PassengerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Flight");

                    b.Navigation("Passenger");
                });

            modelBuilder.Entity("Airline.Domain.Entities.AirlineFamily", b =>
                {
                    b.Navigation("Models");
                });

            modelBuilder.Entity("Airline.Domain.Entities.AirlineModel", b =>
                {
                    b.Navigation("Flights");
                });

            modelBuilder.Entity("Airline.Domain.Entities.Flight", b =>
                {
                    b.Navigation("Tickets");
                });

            modelBuilder.Entity("Airline.Domain.Entities.Passenger", b =>
                {
                    b.Navigation("Tickets");
                });
#pragma warning restore 612, 618
        }
    }
}
